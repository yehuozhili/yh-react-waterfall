{"version":3,"sources":["components/push.tsx","components/index.tsx","App.tsx","components/validate.tsx","serviceWorker.ts","index.tsx"],"names":["toPush","children","index","left","top","Array","isArray","cur","React","isValidElement","originStyle","props","style","mergeStyle","position","cloneElement","console","error","defaultWrapperStyle","overflow","width","height","Waterfall","classnames","column","itemWidth","forceHeight","scrollCallback","wrapperRefCallback","useState","current","setCurrent","renderChildren","setRenderChildren","force","forceUpdate","useMemo","w","parseFloat","mergedStyle","leftArr","start","arr","i","push","dynamicHeight","fill","useEffect","render","lastH","lastRH","window","clearTimeout","timer","childrenLen","length","setTimeout","wrapperRef","scroll","scrollTop","scrollHeight","min","Math","findIndex","v","getFarColumnAndDis","minCol","dis","total","pos","isCanPush","newCurrent","prev","colN","useRef","handler","addEventListener","removeEventListener","ref","className","imglist","concat","App","num","setNum","display","border","map","slice","key","padding","boxSizing","data-height","src","alt","onClick","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.a7b5c465.chunk.js","sourcesContent":["import React, { ReactNode } from \"react\";\r\n\r\nexport function toPush(\r\n\tchildren: ReactNode,\r\n\tindex: number,\r\n\tleft: number,\r\n\ttop: number\r\n) {\r\n\tif (children && Array.isArray(children)) {\r\n\t\tconst cur = children[index];\r\n\t\tif (React.isValidElement(cur)) {\r\n\t\t\tconst originStyle = cur.props?.style;\r\n\t\t\tconst mergeStyle = {\r\n\t\t\t\t...originStyle,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tleft: left,\r\n\t\t\t\ttop: top,\r\n\t\t\t};\r\n\t\t\tconst cloneElement = React.cloneElement(cur, {\r\n\t\t\t\t...cur.props,\r\n\t\t\t\tstyle: mergeStyle,\r\n\t\t\t});\r\n\t\t\treturn cloneElement;\r\n\t\t} else {\r\n\t\t\tconsole.error(\"this child is invalid type\", cur);\r\n\t\t\treturn null;\r\n\t\t}\r\n\t} else {\r\n\t\tconsole.error(\"children should be array,but get\", typeof children);\r\n\t\treturn null;\r\n\t}\r\n}\r\n","import React, {\r\n\tCSSProperties,\r\n\tPropsWithChildren,\r\n\tReactElement,\r\n\tRefObject,\r\n\tuseEffect,\r\n\tuseMemo,\r\n\tuseRef,\r\n\tuseState,\r\n} from \"react\";\r\nimport { toPush } from \"./push\";\r\nimport { getFarColumnAndDis, isCanPush } from \"./validate\";\r\n\r\ninterface WaterfallProps {\r\n\t//外层容器样式 ，需要自己定外层容器宽高，默认宽高800px\r\n\tstyle?: CSSProperties;\r\n\t//外层容器类名\r\n\tclassnames?: string;\r\n\t//列数 必传\r\n\tcolumn: number;\r\n\t//每个子元素宽度，需要定宽 必传\r\n\titemWidth: number;\r\n\t//容器虚拟渲染高度，需要大于容器高度，用于在用户没滚到最底层时加载\r\n\tforceHeight?: number;\r\n\t//监听滚动函数，参数是强制刷新，使得可以继续对滚动进行判断\r\n\tscrollCallback?: (v: React.Dispatch<React.SetStateAction<number>>) => void;\r\n\t//拿到外层容器的ref\r\n\twrapperRefCallback?: (v: RefObject<HTMLDivElement>) => void;\r\n}\r\n\r\nexport const defaultWrapperStyle: CSSProperties = {\r\n\toverflow: \"auto\",\r\n\twidth: \"800px\",\r\n\theight: \"800px\",\r\n\tposition: \"relative\",\r\n};\r\n\r\nexport function Waterfall(props: PropsWithChildren<WaterfallProps>) {\r\n\tconst {\r\n\t\tstyle,\r\n\t\tclassnames,\r\n\t\tcolumn,\r\n\t\titemWidth,\r\n\t\tforceHeight,\r\n\t\tscrollCallback,\r\n\t\twrapperRefCallback,\r\n\t} = props;\r\n\tconst [current, setCurrent] = useState(0);\r\n\tconst [renderChildren, setRenderChildren] = useState<ReactElement[]>([]);\r\n\tconst [force, forceUpdate] = useState(0);\r\n\tconst width = useMemo(() => {\r\n\t\tif (forceHeight) {\r\n\t\t\treturn forceHeight;\r\n\t\t} else {\r\n\t\t\tconst w = style?.width ?? \"800px\";\r\n\t\t\tif (typeof w === \"string\") {\r\n\t\t\t\treturn parseFloat(w);\r\n\t\t\t} else {\r\n\t\t\t\treturn w;\r\n\t\t\t}\r\n\t\t}\r\n\t}, [forceHeight, style]);\r\n\r\n\tconst height = useMemo(() => {\r\n\t\tconst w = style?.height ?? \"800px\";\r\n\t\tif (typeof w === \"string\") {\r\n\t\t\treturn parseFloat(w);\r\n\t\t} else {\r\n\t\t\treturn w;\r\n\t\t}\r\n\t}, [style]);\r\n\r\n\tconst mergedStyle = useMemo(() => {\r\n\t\treturn { ...defaultWrapperStyle, ...style };\r\n\t}, [style]);\r\n\r\n\t//给的宽可能比item*column大，计算每列起始left。\r\n\tconst leftArr = useMemo(() => {\r\n\t\tconst remain = width - itemWidth * column;\r\n\t\tconst start = remain / 2;\r\n\t\t//暂时先做居中\r\n\t\tlet arr = [];\r\n\t\tfor (let i = 0; i < column; i++) {\r\n\t\t\tarr.push(start + itemWidth * i);\r\n\t\t}\r\n\t\treturn arr;\r\n\t}, [column, itemWidth, width]);\r\n\r\n\tconst dynamicHeight: Array<number> = useMemo(() => {\r\n\t\treturn new Array(column).fill(0);\r\n\t}, [column]);\r\n\r\n\t//渲染后获取对应元素高度\r\n\r\n\tuseEffect(() => {\r\n\t\tconst render = toPush(props.children, 0, leftArr[0], 0);\r\n\t\tlet timer: number;\r\n\t\tif (render) {\r\n\t\t\tsetRenderChildren([render]);\r\n\t\t\tconst colN = 0;\r\n\t\t\tconst lastH = dynamicHeight[colN];\r\n\t\t\tconst lastRH = render.props[\"data-height\"];\r\n\t\t\tif (!lastRH) {\r\n\t\t\t\tconsole.error(\r\n\t\t\t\t\t\"you should pass the data-height to specify every children height\"\r\n\t\t\t\t);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tdynamicHeight[colN] = lastH + parseFloat(lastRH);\r\n\t\t}\r\n\t\treturn () => {\r\n\t\t\twindow.clearTimeout(timer);\r\n\t\t};\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [leftArr, props.children]);\r\n\r\n\tconst childrenLen = useMemo(() => {\r\n\t\tconst children = props.children;\r\n\t\tif (Array.isArray(children)) {\r\n\t\t\treturn children.length;\r\n\t\t} else {\r\n\t\t\tconsole.error(\"children must be array\");\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t}, [props.children]);\r\n\r\n\tuseEffect(() => {\r\n\t\tlet timer = window.setTimeout(() => {\r\n\t\t\tif (renderChildren.length > 0 && wrapperRef.current) {\r\n\t\t\t\tconst scroll = wrapperRef.current.scrollTop;\r\n\t\t\t\tconst [minCol, dis] = getFarColumnAndDis(\r\n\t\t\t\t\tdynamicHeight,\r\n\t\t\t\t\theight,\r\n\t\t\t\t\tscroll\r\n\t\t\t\t);\r\n\t\t\t\tif (isCanPush(current, childrenLen, dis)) {\r\n\t\t\t\t\tconst newCurrent = current + 1;\r\n\t\t\t\t\tsetCurrent(newCurrent);\r\n\t\t\t\t\tconst left = leftArr[minCol];\r\n\t\t\t\t\tconst top = dynamicHeight[minCol];\r\n\t\t\t\t\tconst render = toPush(\r\n\t\t\t\t\t\tprops.children,\r\n\t\t\t\t\t\tnewCurrent,\r\n\t\t\t\t\t\tleft,\r\n\t\t\t\t\t\ttop\r\n\t\t\t\t\t);\r\n\t\t\t\t\tif (render) {\r\n\t\t\t\t\t\tsetRenderChildren((prev) => [...prev, render]);\r\n\t\t\t\t\t\tconst colN = minCol;\r\n\t\t\t\t\t\tconst lastH = dynamicHeight[colN];\r\n\t\t\t\t\t\tconst lastRH = render.props[\"data-height\"];\r\n\r\n\t\t\t\t\t\tif (!lastRH) {\r\n\t\t\t\t\t\t\tconsole.error(\r\n\t\t\t\t\t\t\t\t\"you should pass the data-height to specify every children height\"\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdynamicHeight[colN] = lastH + parseFloat(lastRH);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn () => {\r\n\t\t\twindow.clearTimeout(timer);\r\n\t\t};\r\n\t}, [\r\n\t\tchildrenLen,\r\n\t\tcolumn,\r\n\t\tcurrent,\r\n\t\tdynamicHeight,\r\n\t\theight,\r\n\t\tleftArr,\r\n\t\tprops.children,\r\n\t\trenderChildren,\r\n\t\tforce,\r\n\t]);\r\n\r\n\tconst wrapperRef = useRef<HTMLDivElement>(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tlet handler: (e: Event) => void;\r\n\t\tif (wrapperRef.current) {\r\n\t\t\thandler = () => {\r\n\t\t\t\tif (scrollCallback) {\r\n\t\t\t\t\tscrollCallback(forceUpdate);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tforceUpdate((prev) => prev + 1);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\twrapperRef.current.addEventListener(\"scroll\", handler);\r\n\t\t}\r\n\t\treturn () => {\r\n\t\t\tif (wrapperRef.current) {\r\n\t\t\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t\t\t\twrapperRef.current.removeEventListener(\"scroll\", handler);\r\n\t\t\t}\r\n\t\t};\r\n\t}, [scrollCallback]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (wrapperRefCallback) {\r\n\t\t\twrapperRefCallback(wrapperRef);\r\n\t\t}\r\n\t}, [wrapperRefCallback]);\r\n\r\n\treturn (\r\n\t\t<div ref={wrapperRef} style={mergedStyle} className={classnames}>\r\n\t\t\t{renderChildren}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Waterfall;\r\n","import React, { useState } from \"react\";\nimport Waterfall from \"./components\";\n\n//模拟数据\nconst imglist = [\n\t\"http://dummyimage.com/200x100\",\n\t\"http://dummyimage.com/200x200\",\n\t\"http://dummyimage.com/200x100\",\n\t\"http://dummyimage.com/200x500\",\n\t\"http://dummyimage.com/200x800\",\n];\nlet arr: Array<string> = [];\nfor (let i = 0; i < 100; i++) {\n\tarr = arr.concat(imglist);\n}\n///////////////////////\nfunction App() {\n\tconst [num, setNum] = useState(3);\n\n\treturn (\n\t\t<div style={{ display: \"flex\" }}>\n\t\t\t<Waterfall\n\t\t\t\tstyle={{\n\t\t\t\t\tborder: \"1px solid black\",\n\t\t\t\t}}\n\t\t\t\tcolumn={num}\n\t\t\t\t//220是200宽，左右padding 10\n\t\t\t\titemWidth={220} //瀑布流需要每个宽度相等，高度可以不相等 单位px 如果rem自行换算\n\t\t\t>\n\t\t\t\t{arr.map((v, i) => {\n\t\t\t\t\tconst height = parseFloat(v.slice(v.length - 3, v.length));\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tpadding: \"10px\",\n\t\t\t\t\t\t\t\tboxSizing: \"content-box\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t//这个是图片高度+上下padding 20  必传项！！！！\n\t\t\t\t\t\t\tdata-height={height + 20} //高度必须固定，因为图片异步加载，会导致div塌缩，从而高度计算错误\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<img src={v} alt=\"\"></img>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</Waterfall>\n\t\t\t<button\n\t\t\t\tonClick={() => setNum(3)}\n\t\t\t\tstyle={{ height: \"50px\", width: \"50px\" }}\n\t\t\t>\n\t\t\t\t切换3栏\n\t\t\t</button>\n\t\t\t<button\n\t\t\t\tonClick={() => setNum(2)}\n\t\t\t\tstyle={{ height: \"50px\", width: \"50px\" }}\n\t\t\t>\n\t\t\t\t切换2栏\n\t\t\t</button>\n\t\t\t<button\n\t\t\t\tonClick={() => setNum(1)}\n\t\t\t\tstyle={{ height: \"50px\", width: \"50px\" }}\n\t\t\t>\n\t\t\t\t切换1栏\n\t\t\t</button>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","export function isCanPush(current: number, total: number, pos: number) {\r\n\treturn current + 1 < total && pos > 0;\r\n}\r\nexport function getFarColumnAndDis(\r\n\tdynamicHeight: Array<number>,\r\n\theight: number,\r\n\tscrollHeight: number\r\n): [number, number] {\r\n\tconst min = Math.min(...dynamicHeight);\r\n\tconst minIndex = dynamicHeight.findIndex((v) => v === min);\r\n\tconst totalHeight = height + scrollHeight;\r\n\tconst remain = totalHeight - min;\r\n\treturn [minIndex, remain];\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}